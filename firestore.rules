rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Templates collection - allow reading public templates, full access to own templates
    match /templates/{templateId} {
      allow create: if request.auth != null;
      // Users can read their own templates OR public templates that are approved
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         (resource.data.isPublic == true && resource.data.moderationStatus == 'approved'));
      // Users can only update/delete their own templates
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /journalEntries/{entryId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // DayScore collection - allow users to manage their own day scores
    match /dayScores/{scoreId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // CountdownEvents collection - allow users to manage their own countdown events
    match /countdownEvents/{eventId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Legacy collection name - keeping for backward compatibility
    match /journal/{entryId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Allow users to read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read and write their own subscription data
    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read and write their own usage data
    match /usage/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Writing goals - users can only access their own
    match /writingGoals/{goalId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 